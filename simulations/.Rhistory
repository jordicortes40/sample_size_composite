print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1/sqrt(sum(e1^2))
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
}
summary(MSE1)
summary(MSE2)
library(mvtnorm)
MSE1 <- MSE2 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2) # --> Mejor
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2) # --> Mejor
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2) # --> Mejor
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2))
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2) # --> Mejor
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(1, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
library(mvtnorm)
MSE1 <- MSE2 <- MSE3 <- c()
n <- 100
p <- 3
for (i in 1:100){
print(i)
m <- c(rnorm(1),rnorm(1),rnorm(1)) # mean
s <- diag(p)                       # sigma
d <- rmvnorm(10, mean = m, sigma = s)
e1 <- apply(d,2,mean)
e2 <- e1 - e1/sqrt(sum(e1^2)) # --> Mejor
e3 <- e1 - e1/sum(e1^2)
MSE1[i] <- sum((e1 - m)^2)
MSE2[i] <- sum((e2 - m)^2)
MSE3[i] <- sum((e3 - m)^2)
}
summary(MSE1)
summary(MSE2)
summary(MSE3)
827+938+774
install.packages("scatterplot3d")
library(scatterplot3d)
ppois(q = 2,lambda = 2.35)
ppois(q = 9,lambda = 3*2.35)
pexp(2,2)
qexp(0.95,2)
ppois(6,9.5)
sqrt(1728.694)
pnorm(2,0,1)
qnorm(0.95,0,1)
qnorm(0.25,0,1)
5/3
pnorm(5/3,0,1)
pnorm(2.19)
pnorm(18,15,1.37)
(20-18.9)/4
0.77/0.96
0.77/0.83
1 - (0.9277 + 0.8021 - 0.77)
0.84*0.2/0.32
0.72/(0.72+0.08)
(0.8*0.81)/(0.8*0.81+0.16*0.2)
5- 0.336675
5- 3.36675
sum(2:4*c(0.25,0.3,0.45))
sum(c(10,15,20,30,40,60)*c(0.25,0.2,0.16,.1,.21,.08))
rm(list=ls())
##################################################################################
# Load packages
##################################################################################
library(copula)
library(numDeriv)
library(reshape)
library(rootSolve)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(data.table)
##################################################################################
# Load functions and parameters
##################################################################################
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../functions/functions.R')
source('../functions/functions_simulations.R')
source('../functions/functions_ARE.R')
source('../parameters/parameters.R')
##################################################################################
#                    Calculate HRs
##################################################################################
# Computation of the Combined HR (t) for several copulas and marginal distributions.
# Two different ways of input are allowed: by means of probabilities (Taking into
# consideration Cases 1,2,3,4); and inputing the scale parameters b10, b20.
#
##################################################################################
#
# Last update: 10/03/2020
#
# R version: R 3.6.1
#
# Authors: Jordi Cortes (jordi.cortes-martinez@upc.edu)
#
#
##################################################################################
#
# References:
#   - Gomez G. and Lagakos S. Statistical considerations when using a composite
#     endpoint for comparing treatment groups. Statistics in Medicine, 2013.
#
##################################################################################
rm(list=ls())
##################################################################################
# Load packages
##################################################################################
library(copula)
library(numDeriv)
library(reshape)
library(rootSolve)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(data.table)
##################################################################################
# Load functions and parameters
##################################################################################
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('../functions/functions.R')
source('../functions/functions_simulations.R')
source('../functions/functions_ARE.R')
source('../parameters/parameters.R')
##################################################################################
# Scenarios parameters
##################################################################################
HR1   <- c(0.2,0.4,0.6,0.8,0.9)
HR2   <- c(0.2,0.4,0.6,0.8,0.9)
P1    <- c(0.05,0.1,0.3,0.5)
P2    <- c(0.05,0.1,0.3,0.5)
BETA1 <- c(0.5,1,2)
BETA2 <- c(0.5,1,2)
RHO   <- c(0.1,0.3,0.5,0.8)
CASE  <- c(3,4)
COPULA<- c("Frank","Clayton","Gumbel")
############################################################
# Settings
############################################################
# d0: all combinations
# d1: to store results
d0 <- expand.grid(case=CASE,copula=COPULA,HR2=HR2,HR1=HR1,rho=RHO,
p2=P2,p1=P1,beta2=BETA2,beta1=BETA1,stringsAsFactors = FALSE)[,c(1,9:2)]
d0 <- subset(d0,!(case==4 & p1==0.5 & p2==0.5))
d1 <- matrix(as.numeric(NA),ncol=length(VAR.NAMES),nrow=nrow(d0))
############################################################
# Estimate HR composite
############################################################
t_values <- c(0.0001,seq(0.001,1,0.001))  # times to assess
t0 <- Sys.time()
for (i in 1:nrow(d0)) {
##-- Estimate summary measures of HR*
COMBINED_HR_values <- COMBINED_HR(t=t_values,
rho0=d0$rho[i],
beta1=d0$beta1[i],beta2=d0$beta2[i],
HR1=d0$HR1[i],HR2=d0$HR2[i],
p1=d0$p1[i],p2=d0$p2[i],
case=d0$case[i],copula=d0$copula[i],
tau=seq(0.25,1,0.25))
##-- Store information
d1[i,] <- as.numeric(unlist(COMBINED_HR_values))
##-- Print execution time
# print_time(t0,i,nrow(d0))
}
